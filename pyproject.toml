[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "confpickem"
version = "0.1.0"
description = "Simulation-based tool to analyze Confidence Pick Em pools"
authors = [{name = "Taylor Firman", email = "tefirman@gmail.com"}]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Games/Entertainment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]
dependencies = [
    "requests>=2.25.0",
    "pandas>=1.2.0",
    "numpy>=1.19.0",
    "beautifulsoup4>=4.9.0",
    "scipy>=1.6.0"
]
keywords = ["football", "nfl", "fantasy-sports", "confidence-pool", "pick-em"]

[project.urls]
Repository = "https://github.com/tefirman/confpickem"  # Replace with your actual repo URL
Documentation = "https://github.com/tefirman/confpickem#readme"
"Bug Tracker" = "https://github.com/tefirman/confpickem/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.900"
]

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["confpickem"]

[tool.black]
line-length = 100
target-version = ["py38"]
include = '\.pyi?$'

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist"]

[tool.pytest.ini_options]
addopts = "--cov=src/confpickem --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
]